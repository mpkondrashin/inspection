name: Inspection Build
on:
  push:
    tags:
    - '*'  
permissions:
  contents: write
jobs:
    build:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [windows-latest, macos-latest, ubuntu-latest]
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Go
          uses: actions/setup-go@v3

        - name: setup env
          run: |
            echo "::set-env name=GOPATH::$(go env GOPATH)"
            echo "::add-path::$(go env GOPATH)/bin"
          env:
            ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

        - name: install required dependencies for Linux
          if:  matrix.os == 'ubuntu-latest'
          run: sudo apt-get install libgl1-mesa-dev xorg-dev

        - name: Build genver
          if: startsWith(github.ref, 'refs/tags/')
          run: |
            go build ./cmd/genver
            ./genver cmd/ginspection ${{ github.ref_name }}

        - name: Install fyne
          run: go install fyne.io/fyne/v2/cmd/fyne@latest
      
        - name: Package Windows
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'
          run: |
            fyne package --os windows --name GInspection --appID in.kondrash --appVersion "${{ github.ref_name }}".substring(1) --icon ../../bin/icon.png --release --sourceDir ./cmd/ginspection

        - name: Package Linux
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
          run: |
            ref_name="${{ github.ref_name }}"
            version="${ref_name:1}"
            fyne package --os linux --name GInspection --appID in.kondrash --appVersion "${version}" --icon ../../bin/icon.png --release --sourceDir ./cmd/ginspection

        - name: Package macOS
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'macos-latest'
          run: |
            ref_name="${{ github.ref_name }}"
            version="${ref_name:1}"
            fyne package --os darwin --name GInspection --appID in.kondrash --appVersion "${version}" --icon ../../bin/icon.png --release --sourceDir ./cmd/ginspection
              
        - name: Get-ChildItem -Recurse
          if: matrix.os == 'windows-latest'
          run: Get-ChildItem -Recurse

        - name: ls -lR
          if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
          run: ls -lR

        - name: Build Inspection
          run: go build ./cmd/inspection
    
        - name: Pack for Windows
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'
          run: Compress-Archive -Path bin/opengl32.dll, inspection.exe, cmd/ginspection/GInspection.exe, README.md, config_example.yaml -Destination inspection_win64_${{ github.ref_name }}.zip

        - name: Pack for macOS
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'macos-latest'
          run: zip -r inspection_macos_${{ github.ref_name }}.zip inspection GInspection.app README.md config_example.yaml

        - name: Pack for Linux 
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' 
          run: zip inspection_linux_${{ github.ref_name }}.zip inspection GInspection.tar.xz README.md config_example.yaml

        - name: Release for Windows
          uses: softprops/action-gh-release@v1
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'
          with:
            files: |
              inspection_win64_${{ github.ref_name }}.zip
      
        - name: Release for Linux
          uses: softprops/action-gh-release@v1
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' 
          with:
            files: |
              inspection_linux_${{ github.ref_name }}.zip
      
        - name: Release macOS
          uses: softprops/action-gh-release@v1
          if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'macos-latest'
          with:
            files: |
              inspection_macos_${{ github.ref_name }}.zip
      
    